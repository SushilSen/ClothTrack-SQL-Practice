Use your_database;

CREATE TABLE Garments (
    garment_id INT PRIMARY KEY,
    style_name VARCHAR(100),
    category VARCHAR(50),
    size_range VARCHAR(20),
    fabric_type VARCHAR(50),
    design_date DATE
);

INSERT INTO Garments (garment_id, style_name, category, size_range, fabric_type, design_date) VALUES
(1, 'Classic Tee', 'Shirt', 'S-XL', 'Cotton', '2023-01-15'),
(2, 'Denim Jacket', 'Jacket', 'S-L', 'Denim', '2023-01-18'),
(3, 'Slim Jeans', 'Jeans', '28-36', 'Denim', '2023-02-01'),
(4, 'Hooded Sweatshirt', 'Hoodie', 'M-XL', 'Fleece', '2023-02-10'),
(5, 'Flannel Shirt', 'Shirt', 'S-XXL', 'Flannel', '2023-02-20'),
(6, 'Striped Polo', 'Shirt', 'M-XL', 'Cotton', '2023-03-01'),
(7, 'Chino Pants', 'Pants', '30-38', 'Twill', '2023-03-03'),
(8, 'Winter Coat', 'Jacket', 'L-XXL', 'Wool', '2023-03-10'),
(9, 'Athletic Shorts', 'Shorts', 'S-L', 'Polyester', '2023-03-15'),
(10, 'Denim Skirt', 'Skirt', '26-34', 'Denim', '2023-03-20'),
(11, 'V-Neck Sweater', 'Sweater', 'S-XL', 'Wool', '2023-03-25'),
(12, 'Cargo Pants', 'Pants', '32-40', 'Cotton', '2023-04-01'),
(13, 'Bomber Jacket', 'Jacket', 'M-XL', 'Nylon', '2023-04-05'),
(14, 'Tank Top', 'Shirt', 'XS-L', 'Cotton', '2023-04-10'),
(15, 'Pleated Skirt', 'Skirt', '24-32', 'Polyester', '2023-04-15'),
(16, 'Corduroy Pants', 'Pants', '30-38', 'Corduroy', '2023-04-20'),
(17, 'Turtleneck', 'Sweater', 'S-XXL', 'Cashmere', '2023-04-25'),
(18, 'Track Pants', 'Pants', 'S-XL', 'Polyester', '2023-05-01'),
(19, 'Leather Jacket', 'Jacket', 'M-XXL', 'Leather', '2023-05-05'),
(20, 'Oxford Shirt', 'Shirt', 'S-XL', 'Cotton', '2023-05-10'),
(21, 'Maxi Dress', 'Dress', 'XS-XL', 'Rayon', '2023-05-15'),
(22, 'Crop Top', 'Shirt', 'XS-M', 'Cotton', '2023-05-20'),
(23, 'Jogger Pants', 'Pants', '28-36', 'Jersey', '2023-05-25'),
(24, 'Parka', 'Jacket', 'L-XXL', 'Nylon', '2023-06-01'),
(25, 'Linen Shirt', 'Shirt', 'S-XL', 'Linen', '2023-06-05'),
(26, 'Mini Skirt', 'Skirt', '24-30', 'Denim', '2023-06-10'),
(27, 'Cable Knit Sweater', 'Sweater', 'M-XL', 'Wool', '2023-06-15'),
(28, 'Wide Leg Pants', 'Pants', '30-38', 'Cotton', '2023-06-20'),
(29, 'Windbreaker', 'Jacket', 'S-XL', 'Polyester', '2023-06-25'),
(30, 'Button-Down Shirt', 'Shirt', 'S-XXL', 'Cotton', '2023-07-01'),
(31, 'Sundress', 'Dress', 'XS-L', 'Cotton', '2023-07-05'),
(32, 'Graphic Tee', 'Shirt', 'S-XL', 'Cotton', '2023-07-10'),
(33, 'Carpenter Pants', 'Pants', '32-40', 'Canvas', '2023-07-15'),
(34, 'Puffer Jacket', 'Jacket', 'M-XXL', 'Polyester', '2023-07-20'),
(35, 'Silk Blouse', 'Shirt', 'XS-L', 'Silk', '2023-07-25'),
(36, 'A-Line Skirt', 'Skirt', '26-34', 'Wool', '2023-08-01'),
(37, 'Cardigan', 'Sweater', 'S-XL', 'Cotton', '2023-08-05'),
(38, 'Harem Pants', 'Pants', 'S-XL', 'Rayon', '2023-08-10'),
(39, 'Trench Coat', 'Jacket', 'M-XXL', 'Cotton', '2023-08-15'),
(40, 'Henley Shirt', 'Shirt', 'S-XL', 'Cotton', '2023-08-20'),
(41, 'Wrap Dress', 'Dress', 'XS-XL', 'Jersey', '2023-08-25'),
(42, 'Tunic Top', 'Shirt', 'S-L', 'Linen', '2023-09-01'),
(43, 'Pleated Pants', 'Pants', '30-38', 'Polyester', '2023-09-05'),
(44, 'Varsity Jacket', 'Jacket', 'M-XL', 'Wool', '2023-09-10'),
(45, 'Chiffon Blouse', 'Shirt', 'XS-L', 'Chiffon', '2023-09-15'),
(46, 'Pencil Skirt', 'Skirt', '26-34', 'Wool', '2023-09-20'),
(47, 'Fisherman Sweater', 'Sweater', 'M-XL', 'Wool', '2023-09-25'),
(48, 'Culottes', 'Pants', '28-36', 'Cotton', '2023-10-01'),
(49, 'Motorcycle Jacket', 'Jacket', 'S-XL', 'Leather', '2023-10-05'),
(50, 'Cargo Joggers', 'Pants', '30-40', 'Cotton', '2023-06-01');

CREATE TABLE ProductionBatches (
    batch_id INT PRIMARY KEY,
    garment_id INT,
    production_date DATE,
    quantity_produced INT,
    supervisor_name VARCHAR(100),
    factory_location VARCHAR(100),
    FOREIGN KEY (garment_id) REFERENCES Garments(garment_id)
);

INSERT INTO ProductionBatches (batch_id, garment_id, production_date, quantity_produced, supervisor_name, factory_location) VALUES
(1, 1, '2023-02-10', 500, 'Alice Chen', 'New York'),
(2, 2, '2023-02-12', 300, 'Bob Kumar', 'Los Angeles'),
(3, 3, '2023-02-15', 450, 'Sara Lee', 'Dallas'),
(4, 4, '2023-02-17', 600, 'John Smith', 'Chicago'),
(5, 5, '2023-02-20', 400, 'Tom White', 'Atlanta'),
(6, 6, '2023-02-22', 520, 'Alice Chen', 'New York'),
(7, 7, '2023-02-25', 470, 'Bob Kumar', 'Los Angeles'),
(8, 8, '2023-02-27', 650, 'Sara Lee', 'Dallas'),
(9, 9, '2023-03-01', 300, 'John Smith', 'Chicago'),
(10, 10, '2023-03-03', 550, 'Tom White', 'Atlanta'),
(11, 11, '2023-03-05', 420, 'Alice Chen', 'New York'),
(12, 12, '2023-03-08', 380, 'Bob Kumar', 'Los Angeles'),
(13, 13, '2023-03-10', 530, 'Sara Lee', 'Dallas'),
(14, 14, '2023-03-12', 480, 'John Smith', 'Chicago'),
(15, 15, '2023-03-15', 350, 'Tom White', 'Atlanta'),
(16, 16, '2023-03-18', 620, 'Alice Chen', 'New York'),
(17, 17, '2023-03-20', 410, 'Bob Kumar', 'Los Angeles'),
(18, 18, '2023-03-22', 570, 'Sara Lee', 'Dallas'),
(19, 19, '2023-03-25', 290, 'John Smith', 'Chicago'),
(20, 20, '2023-03-28', 440, 'Tom White', 'Atlanta'),
(21, 21, '2023-04-01', 510, 'Alice Chen', 'New York'),
(22, 22, '2023-04-03', 360, 'Bob Kumar', 'Los Angeles'),
(23, 23, '2023-04-05', 590, 'Sara Lee', 'Dallas'),
(24, 24, '2023-04-08', 330, 'John Smith', 'Chicago'),
(25, 25, '2023-04-10', 670, 'Tom White', 'Atlanta'),
(26, 26, '2023-04-12', 430, 'Alice Chen', 'New York'),
(27, 27, '2023-04-15', 540, 'Bob Kumar', 'Los Angeles'),
(28, 28, '2023-04-18', 380, 'Sara Lee', 'Dallas'),
(29, 29, '2023-04-20', 490, 'John Smith', 'Chicago'),
(30, 30, '2023-04-22', 550, 'Tom White', 'Atlanta'),
(31, 31, '2023-04-25', 310, 'Alice Chen', 'New York'),
(32, 32, '2023-04-28', 460, 'Bob Kumar', 'Los Angeles'),
(33, 33, '2023-05-01', 580, 'Sara Lee', 'Dallas'),
(34, 34, '2023-05-03', 340, 'John Smith', 'Chicago'),
(35, 35, '2023-05-05', 620, 'Tom White', 'Atlanta'),
(36, 36, '2023-05-08', 390, 'Alice Chen', 'New York'),
(37, 37, '2023-05-10', 510, 'Bob Kumar', 'Los Angeles'),
(38, 38, '2023-05-12', 440, 'Sara Lee', 'Dallas'),
(39, 39, '2023-05-15', 570, 'John Smith', 'Chicago'),
(40, 40, '2023-05-18', 320, 'Tom White', 'Atlanta'),
(41, 41, '2023-05-20', 480, 'Alice Chen', 'New York'),
(42, 42, '2023-05-22', 530, 'Bob Kumar', 'Los Angeles'),
(43, 43, '2023-05-24', 370, 'Sara Lee', 'Dallas'),
(44, 44, '2023-05-26', 590, 'John Smith', 'Chicago'),
(45, 45, '2023-05-28', 410, 'Tom White', 'Atlanta'),
(46, 46, '2023-05-30', 520, 'Alice Chen', 'New York'),
(47, 47, '2023-06-01', 340, 'Bob Kumar', 'Los Angeles'),
(48, 48, '2023-06-03', 460, 'Sara Lee', 'Dallas'),
(49, 49, '2023-06-05', 580, 'John Smith', 'Chicago'),
(50, 50, '2023-06-08', 390, 'Tom White', 'Atlanta');

CREATE TABLE Workers (
    worker_id INT PRIMARY KEY,
    batch_id INT,
    name VARCHAR(100),
    hours_worked INT,
    task VARCHAR(50),
    wage_per_hour DECIMAL(6,2),
    FOREIGN KEY (batch_id) REFERENCES ProductionBatches(batch_id)
);

INSERT INTO Workers (worker_id, batch_id, name, hours_worked, task, wage_per_hour) VALUES
(1, 1, 'Mike Johnson', 8, 'Stitching', 15.50),
(2, 1, 'Linda Roy', 7, 'Quality Check', 16.00),
(3, 2, 'Chris Evans', 6, 'Ironing', 14.00),
(4, 2, 'Zara Khan', 9, 'Stitching', 15.00),
(5, 3, 'Henry Ford', 10, 'Packaging', 13.50),
(6, 3, 'Emma Watson', 8, 'Stitching', 15.50),
(7, 4, 'Olivia Brown', 7, 'Quality Check', 16.50),
(8, 4, 'William Green', 8, 'Stitching', 14.75),
(9, 5, 'Sophia Lee', 6, 'Ironing', 14.25),
(10, 5, 'James Bond', 9, 'Packaging', 13.75),
(11, 6, 'Arjun Patel', 7, 'Cutting', 17.00),
(12, 6, 'Priya Sharma', 8, 'Stitching', 15.25),
(13, 7, 'David Miller', 9, 'Quality Check', 16.25),
(14, 7, 'Ananya Gupta', 6, 'Ironing', 14.50),
(15, 8, 'Rahul Verma', 10, 'Packaging', 13.25),
(16, 8, 'Neha Singh', 8, 'Stitching', 15.75),
(17, 9, 'Kevin Wilson', 7, 'Cutting', 16.75),
(18, 9, 'Elena Garcia', 9, 'Quality Check', 15.50),
(19, 10, 'Daniel Kim', 8, 'Ironing', 14.75),
(20, 10, 'Maya Chen', 7, 'Packaging', 13.50),
(21, 11, 'Alex Turner', 9, 'Stitching', 15.00),
(22, 11, 'Sophie Martin', 6, 'Cutting', 17.25),
(23, 12, 'Nathan Scott', 8, 'Quality Check', 16.00),
(24, 12, 'Isabella Lopez', 7, 'Ironing', 14.25),
(25, 13, 'Ethan Brown', 10, 'Packaging', 13.75),
(26, 13, 'Ava Johnson', 8, 'Stitching', 15.50),
(27, 14, 'Liam Wilson', 7, 'Cutting', 16.50),
(28, 14, 'Charlotte Lee', 9, 'Quality Check', 15.75),
(29, 15, 'Noah Garcia', 6, 'Ironing', 14.00),
(30, 15, 'Amelia Martinez', 8, 'Packaging', 13.25),
(31, 16, 'Logan Taylor', 9, 'Stitching', 15.25),
(32, 16, 'Harper Anderson', 7, 'Cutting', 17.00),
(33, 17, 'Mason Thomas', 8, 'Quality Check', 16.25),
(34, 17, 'Evelyn White', 6, 'Ironing', 14.50),
(35, 18, 'Jacob Harris', 10, 'Packaging', 13.50),
(36, 18, 'Abigail Clark', 8, 'Stitching', 15.75),
(37, 19, 'Michael Lewis', 7, 'Cutting', 16.75),
(38, 19, 'Emily Robinson', 9, 'Quality Check', 15.00),
(39, 20, 'Benjamin Walker', 6, 'Ironing', 14.25),
(40, 20, 'Mia Hall', 8, 'Packaging', 13.75),
(41, 21, 'Samuel Young', 9, 'Stitching', 15.50),
(42, 21, 'Scarlett Allen', 7, 'Cutting', 17.25),
(43, 22, 'Jackson King', 8, 'Quality Check', 16.00),
(44, 22, 'Lily Wright', 6, 'Ironing', 14.50),
(45, 23, 'Aiden Scott', 10, 'Packaging', 13.25),
(46, 23, 'Chloe Adams', 8, 'Stitching', 15.25),
(47, 24, 'Matthew Nelson', 7, 'Cutting', 16.50),
(48, 24, 'Zoey Baker', 9, 'Quality Check', 15.75),
(49, 25, 'Luke Carter', 6, 'Ironing', 14.00),
(50, 25, 'Penelope Perez', 8, 'Packaging', 13.50);
